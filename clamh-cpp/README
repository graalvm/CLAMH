
So, for now, to use the benchmark harness:


1. Build the parser by running "make". [You only have to do this once]


[[[ Note: you can follow steps 2 and 3 to generate and build the benchmark harness   ]]]
[[[ "by hand". Or, you can use the convenient build script "clamh_build_cpp.sh" that ]]]
[[[ can be found in clamh/scripts/ (source clamh.rc to add this to your path).       ]]]


2. You can run the parser "by hand" by executing:
   ./cpp_parser <your_benchmark_file>  >  <generated_file_name>

   For example, with the included example benchmark, "factorial_test3.cpp":
   ./cpp_parser factorial_test3.cpp > gen_factorial_test3.cpp

3. Build the generated test code:
   g++ -std=c++11 -O3 -o <executable_name> <generated_file_name>

   For example,
   g++ -std=c++11 -O3 -o gen_factorial_test3 gen_factorial_test3.cpp

4. Run the test code that you just built:
   ./<executable_name> > <results_file_name>

   For example,
   ./gen_factorial_test3 > fac_test3.result


Command-line options for the generated executable:
-trendfile <file_name>
    Specifies the name of the file to which the CPU speed and warmup trend data will be printed.
    If '-' is specified instead of a file name, the trend data will be printed to stdout.
    If not specified, no trend data will be printed.

